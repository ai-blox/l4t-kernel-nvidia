/*
 * ar0234_mode_tbls.h - ar0234 sensor mode tables
 *
 * Copyright (c) 2018-2019, NVIDIA CORPORATION.  All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms and conditions of the GNU General Public License,
 * version 2, as published by the Free Software Foundation.
 *
 * This program is distributed in the hope it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
#ifndef __AR0234_I2C_TABLES__
#define __AR0234_I2C_TABLES__

#include <media/camera_common.h>

#define AR0234_TABLE_WAIT_MS	0xff00
#define AR0234_TABLE_END	0xff01
#define AR0234_MAX_RETRIES	3
#define AR0234_WAIT_MS_STOP	1
#define AR0234_WAIT_MS_START	30
#define AR0234_WAIT_MS_STREAM	210
#define AR0234_GAIN_TABLE_SIZE 255

#define ar0234_reg struct reg_16

static ar0234_reg ar0234_start[] = {
{0x31E0, 0x0003}, // PIX_DEF_ID
{0x31E0, 0x0003}, // PIX_DEF_ID
{0x30B0, 0x0028}, // DIGITAL_TEST
{0x3060, 0x002E}, // ANALOG_GAIN
{AR0234_TABLE_WAIT_MS, AR0234_WAIT_MS_STREAM},
{0x3088, 0x8000}, // SEQ_CTRL_PORT
{0x3086, 0xC1AE}, // SEQ_DATA_PORT
{0x3086, 0x327F}, // SEQ_DATA_PORT
{0x3086, 0x5780}, // SEQ_DATA_PORT
{0x3086, 0x272F}, // SEQ_DATA_PORT
{0x3086, 0x7416}, // SEQ_DATA_PORT
{0x3086, 0x7E13}, // SEQ_DATA_PORT
{0x3086, 0x8000}, // SEQ_DATA_PORT
{0x3086, 0x307E}, // SEQ_DATA_PORT
{0x3086, 0xFF80}, // SEQ_DATA_PORT
{0x3086, 0x20C3}, // SEQ_DATA_PORT
{0x3086, 0xB00E}, // SEQ_DATA_PORT
{0x3086, 0x8190}, // SEQ_DATA_PORT
{0x3086, 0x1643}, // SEQ_DATA_PORT
{0x3086, 0x1651}, // SEQ_DATA_PORT
{0x3086, 0x9D3E}, // SEQ_DATA_PORT
{0x3086, 0x9545}, // SEQ_DATA_PORT
{0x3086, 0x2209}, // SEQ_DATA_PORT
{0x3086, 0x3781}, // SEQ_DATA_PORT
{0x3086, 0x9016}, // SEQ_DATA_PORT
{0x3086, 0x4316}, // SEQ_DATA_PORT
{0x3086, 0x7F90}, // SEQ_DATA_PORT
{0x3086, 0x8000}, // SEQ_DATA_PORT
{0x3086, 0x387F}, // SEQ_DATA_PORT
{0x3086, 0x1380}, // SEQ_DATA_PORT
{0x3086, 0x233B}, // SEQ_DATA_PORT
{0x3086, 0x7F93}, // SEQ_DATA_PORT
{0x3086, 0x4502}, // SEQ_DATA_PORT
{0x3086, 0x8000}, // SEQ_DATA_PORT
{0x3086, 0x7FB0}, // SEQ_DATA_PORT
{0x3086, 0x8D66}, // SEQ_DATA_PORT
{0x3086, 0x7F90}, // SEQ_DATA_PORT
{0x3086, 0x8192}, // SEQ_DATA_PORT
{0x3086, 0x3C16}, // SEQ_DATA_PORT
{0x3086, 0x357F}, // SEQ_DATA_PORT
{0x3086, 0x9345}, // SEQ_DATA_PORT
{0x3086, 0x0280}, // SEQ_DATA_PORT
{0x3086, 0x007F}, // SEQ_DATA_PORT
{0x3086, 0xB08D}, // SEQ_DATA_PORT
{0x3086, 0x667F}, // SEQ_DATA_PORT
{0x3086, 0x9081}, // SEQ_DATA_PORT
{0x3086, 0x8237}, // SEQ_DATA_PORT
{0x3086, 0x4502}, // SEQ_DATA_PORT
{0x3086, 0x3681}, // SEQ_DATA_PORT
{0x3086, 0x8044}, // SEQ_DATA_PORT
{0x3086, 0x1631}, // SEQ_DATA_PORT
{0x3086, 0x4374}, // SEQ_DATA_PORT
{0x3086, 0x1678}, // SEQ_DATA_PORT
{0x3086, 0x7B7D}, // SEQ_DATA_PORT
{0x3086, 0x4502}, // SEQ_DATA_PORT
{0x3086, 0x450A}, // SEQ_DATA_PORT
{0x3086, 0x7E12}, // SEQ_DATA_PORT
{0x3086, 0x8180}, // SEQ_DATA_PORT
{0x3086, 0x377F}, // SEQ_DATA_PORT
{0x3086, 0x1045}, // SEQ_DATA_PORT
{0x3086, 0x0A0E}, // SEQ_DATA_PORT
{0x3086, 0x7FD4}, // SEQ_DATA_PORT
{0x3086, 0x8024}, // SEQ_DATA_PORT
{0x3086, 0x0E82}, // SEQ_DATA_PORT
{0x3086, 0x9CC2}, // SEQ_DATA_PORT
{0x3086, 0xAFA8}, // SEQ_DATA_PORT
{0x3086, 0xAA03}, // SEQ_DATA_PORT
{0x3086, 0x430D}, // SEQ_DATA_PORT
{0x3086, 0x2D46}, // SEQ_DATA_PORT
{0x3086, 0x4316}, // SEQ_DATA_PORT
{0x3086, 0x5F16}, // SEQ_DATA_PORT
{0x3086, 0x530D}, // SEQ_DATA_PORT
{0x3086, 0x1660}, // SEQ_DATA_PORT
{0x3086, 0x401E}, // SEQ_DATA_PORT
{0x3086, 0x2904}, // SEQ_DATA_PORT
{0x3086, 0x2984}, // SEQ_DATA_PORT
{0x3086, 0x81E7}, // SEQ_DATA_PORT
{0x3086, 0x816F}, // SEQ_DATA_PORT
{0x3086, 0x1706}, // SEQ_DATA_PORT
{0x3086, 0x81E7}, // SEQ_DATA_PORT
{0x3086, 0x7F81}, // SEQ_DATA_PORT
{0x3086, 0x5C0D}, // SEQ_DATA_PORT
{0x3086, 0x5754}, // SEQ_DATA_PORT
{0x3086, 0x495F}, // SEQ_DATA_PORT
{0x3086, 0x5305}, // SEQ_DATA_PORT
{0x3086, 0x5307}, // SEQ_DATA_PORT
{0x3086, 0x4D2B}, // SEQ_DATA_PORT
{0x3086, 0xF810}, // SEQ_DATA_PORT
{0x3086, 0x164C}, // SEQ_DATA_PORT
{0x3086, 0x0755}, // SEQ_DATA_PORT
{0x3086, 0x562B}, // SEQ_DATA_PORT
{0x3086, 0xB82B}, // SEQ_DATA_PORT
{0x3086, 0x984E}, // SEQ_DATA_PORT
{0x3086, 0x1129}, // SEQ_DATA_PORT
{0x3086, 0x9460}, // SEQ_DATA_PORT
{0x3086, 0x5C09}, // SEQ_DATA_PORT
{0x3086, 0x5C1B}, // SEQ_DATA_PORT
{0x3086, 0x4002}, // SEQ_DATA_PORT
{0x3086, 0x4500}, // SEQ_DATA_PORT
{0x3086, 0x4580}, // SEQ_DATA_PORT
{0x3086, 0x29B6}, // SEQ_DATA_PORT
{0x3086, 0x7F80}, // SEQ_DATA_PORT
{0x3086, 0x4004}, // SEQ_DATA_PORT
{0x3086, 0x7F88}, // SEQ_DATA_PORT
{0x3086, 0x4109}, // SEQ_DATA_PORT
{0x3086, 0x5C0B}, // SEQ_DATA_PORT
{0x3086, 0x29B2}, // SEQ_DATA_PORT
{0x3086, 0x4125}, // SEQ_DATA_PORT
{0x3086, 0x5C03}, // SEQ_DATA_PORT
{0x3086, 0x4105}, // SEQ_DATA_PORT
{0x3086, 0x5F2B}, // SEQ_DATA_PORT
{0x3086, 0x902B}, // SEQ_DATA_PORT
{0x3086, 0x8081}, // SEQ_DATA_PORT
{0x3086, 0x6F40}, // SEQ_DATA_PORT
{0x3086, 0x1041}, // SEQ_DATA_PORT
{0x3086, 0x0160}, // SEQ_DATA_PORT
{0x3086, 0x29A2}, // SEQ_DATA_PORT
{0x3086, 0x29A3}, // SEQ_DATA_PORT
{0x3086, 0x5F4D}, // SEQ_DATA_PORT
{0x3086, 0x1C17}, // SEQ_DATA_PORT
{0x3086, 0x0281}, // SEQ_DATA_PORT
{0x3086, 0xE729}, // SEQ_DATA_PORT
{0x3086, 0x8345}, // SEQ_DATA_PORT
{0x3086, 0x8840}, // SEQ_DATA_PORT
{0x3086, 0x0B7F}, // SEQ_DATA_PORT
{0x3086, 0x8A40}, // SEQ_DATA_PORT
{0x3086, 0x2345}, // SEQ_DATA_PORT
{0x3086, 0x8024}, // SEQ_DATA_PORT
{0x3086, 0x4008}, // SEQ_DATA_PORT
{0x3086, 0x7F88}, // SEQ_DATA_PORT
{0x3086, 0x5D29}, // SEQ_DATA_PORT
{0x3086, 0x9288}, // SEQ_DATA_PORT
{0x3086, 0x102B}, // SEQ_DATA_PORT
{0x3086, 0x0489}, // SEQ_DATA_PORT
{0x3086, 0x165C}, // SEQ_DATA_PORT
{0x3086, 0x4386}, // SEQ_DATA_PORT
{0x3086, 0x170B}, // SEQ_DATA_PORT
{0x3086, 0x5C03}, // SEQ_DATA_PORT
{0x3086, 0x8A48}, // SEQ_DATA_PORT
{0x3086, 0x4D4E}, // SEQ_DATA_PORT
{0x3086, 0x2B80}, // SEQ_DATA_PORT
{0x3086, 0x4C09}, // SEQ_DATA_PORT
{0x3086, 0x4119}, // SEQ_DATA_PORT
{0x3086, 0x816F}, // SEQ_DATA_PORT
{0x3086, 0x4110}, // SEQ_DATA_PORT
{0x3086, 0x4001}, // SEQ_DATA_PORT
{0x3086, 0x6029}, // SEQ_DATA_PORT
{0x3086, 0x8229}, // SEQ_DATA_PORT
{0x3086, 0x8329}, // SEQ_DATA_PORT
{0x3086, 0x435C}, // SEQ_DATA_PORT
{0x3086, 0x055F}, // SEQ_DATA_PORT
{0x3086, 0x4D1C}, // SEQ_DATA_PORT
{0x3086, 0x81E7}, // SEQ_DATA_PORT
{0x3086, 0x4502}, // SEQ_DATA_PORT
{0x3086, 0x8180}, // SEQ_DATA_PORT
{0x3086, 0x7F80}, // SEQ_DATA_PORT
{0x3086, 0x410A}, // SEQ_DATA_PORT
{0x3086, 0x9144}, // SEQ_DATA_PORT
{0x3086, 0x1609}, // SEQ_DATA_PORT
{0x3086, 0x2FC3}, // SEQ_DATA_PORT
{0x3086, 0xB130}, // SEQ_DATA_PORT
{0x3086, 0xC3B1}, // SEQ_DATA_PORT
{0x3086, 0x0343}, // SEQ_DATA_PORT
{0x3086, 0x164A}, // SEQ_DATA_PORT
{0x3086, 0x0A43}, // SEQ_DATA_PORT
{0x3086, 0x160B}, // SEQ_DATA_PORT
{0x3086, 0x4316}, // SEQ_DATA_PORT
{0x3086, 0x8F43}, // SEQ_DATA_PORT
{0x3086, 0x1690}, // SEQ_DATA_PORT
{0x3086, 0x4316}, // SEQ_DATA_PORT
{0x3086, 0x7F81}, // SEQ_DATA_PORT
{0x3086, 0x450A}, // SEQ_DATA_PORT
{0x3086, 0x410F}, // SEQ_DATA_PORT
{0x3086, 0x7F83}, // SEQ_DATA_PORT
{0x3086, 0x5D29}, // SEQ_DATA_PORT
{0x3086, 0x4488}, // SEQ_DATA_PORT
{0x3086, 0x102B}, // SEQ_DATA_PORT
{0x3086, 0x0453}, // SEQ_DATA_PORT
{0x3086, 0x0D40}, // SEQ_DATA_PORT
{0x3086, 0x1045}, // SEQ_DATA_PORT
{0x3086, 0x0240}, // SEQ_DATA_PORT
{0x3086, 0x087F}, // SEQ_DATA_PORT
{0x3086, 0x8053}, // SEQ_DATA_PORT
{0x3086, 0x0D89}, // SEQ_DATA_PORT
{0x3086, 0x165C}, // SEQ_DATA_PORT
{0x3086, 0x4586}, // SEQ_DATA_PORT
{0x3086, 0x170B}, // SEQ_DATA_PORT
{0x3086, 0x5C05}, // SEQ_DATA_PORT
{0x3086, 0x8A60}, // SEQ_DATA_PORT
{0x3086, 0x4B91}, // SEQ_DATA_PORT
{0x3086, 0x4416}, // SEQ_DATA_PORT
{0x3086, 0x09C1}, // SEQ_DATA_PORT
{0x3086, 0x2CA9}, // SEQ_DATA_PORT
{0x3086, 0xAB30}, // SEQ_DATA_PORT
{0x3086, 0x51B3}, // SEQ_DATA_PORT
{0x3086, 0x3D5A}, // SEQ_DATA_PORT
{0x3086, 0x7E3D}, // SEQ_DATA_PORT
{0x3086, 0x7E19}, // SEQ_DATA_PORT
{0x3086, 0x8000}, // SEQ_DATA_PORT
{0x3086, 0x8B1F}, // SEQ_DATA_PORT
{0x3086, 0x2A1F}, // SEQ_DATA_PORT
{0x3086, 0x83A2}, // SEQ_DATA_PORT
{0x3086, 0x153D}, // SEQ_DATA_PORT
{0x3086, 0x6F7E}, // SEQ_DATA_PORT
{0x3086, 0x1175}, // SEQ_DATA_PORT
{0x3086, 0x16AD}, // SEQ_DATA_PORT
{0x3086, 0x3345}, // SEQ_DATA_PORT
{0x3086, 0x0A7F}, // SEQ_DATA_PORT
{0x3086, 0x5380}, // SEQ_DATA_PORT
{0x3086, 0x238C}, // SEQ_DATA_PORT
{0x3086, 0x667F}, // SEQ_DATA_PORT
{0x3086, 0x1381}, // SEQ_DATA_PORT
{0x3086, 0x8414}, // SEQ_DATA_PORT
{0x3086, 0x8180}, // SEQ_DATA_PORT
{0x3086, 0x313D}, // SEQ_DATA_PORT
{0x3086, 0x6445}, // SEQ_DATA_PORT
{0x3086, 0x2A94}, // SEQ_DATA_PORT
{0x3086, 0x519E}, // SEQ_DATA_PORT
{0x3086, 0x963D}, // SEQ_DATA_PORT
{0x3086, 0x2B3D}, // SEQ_DATA_PORT
{0x3086, 0x1B52}, // SEQ_DATA_PORT
{0x3086, 0x9F0E}, // SEQ_DATA_PORT
{0x3086, 0x3D08}, // SEQ_DATA_PORT
{0x3086, 0x3D16}, // SEQ_DATA_PORT
{0x3086, 0x7E3D}, // SEQ_DATA_PORT
{0x3086, 0x7E19}, // SEQ_DATA_PORT
{0x3086, 0x8024}, // SEQ_DATA_PORT
{0x3086, 0x8B6F}, // SEQ_DATA_PORT
{0x3086, 0x2A6F}, // SEQ_DATA_PORT
{0x3086, 0x83A2}, // SEQ_DATA_PORT
{0x3086, 0x7E11}, // SEQ_DATA_PORT
{0x3086, 0x7516}, // SEQ_DATA_PORT
{0x3086, 0x3E97}, // SEQ_DATA_PORT
{0x3086, 0x0E82}, // SEQ_DATA_PORT
{0x3086, 0xB23D}, // SEQ_DATA_PORT
{0x3086, 0x7FAC}, // SEQ_DATA_PORT
{0x3086, 0x3E45}, // SEQ_DATA_PORT
{0x3086, 0x027F}, // SEQ_DATA_PORT
{0x3086, 0xD080}, // SEQ_DATA_PORT
{0x3086, 0x008C}, // SEQ_DATA_PORT
{0x3086, 0x667F}, // SEQ_DATA_PORT
{0x3086, 0x9081}, // SEQ_DATA_PORT
{0x3086, 0x943F}, // SEQ_DATA_PORT
{0x3086, 0x4416}, // SEQ_DATA_PORT
{0x3086, 0x8184}, // SEQ_DATA_PORT
{0x3086, 0x162C}, // SEQ_DATA_PORT
{0x3086, 0x2C2C}, // SEQ_DATA_PORT
{0x31AE, 0x0204}, // SERIAL_FORMAT
{0x3030, 0x0020}, // PLL_MULTIPLIER*-- Value ch
{0x302E, 0x0003}, // PRE_PLL_CLK_DIV
{0x302C, 0x0001}, // VT_SYS_CLK_DIV
{0x302A, 0x0005}, // VT_PIX_CLK_DIV
{0x3038, 0x0001}, // OP_SYS_CLK_DIV
{0x3036, 0x000A}, // OP_PIX_CLK_DIV
{0x31B0, 0x0082}, // FRAME_PREAMBLE
{0x31B2, 0x005C}, // LINE_PREAMBLE
{0x31B4, 0x3165}, // MIPI timing parameters 0
{0x31B6, 0x310E}, // MIPI timing parameters 1
{0x31B8, 0x2047}, // MIPI timing parameters 2
{0x31BA, 0x0305}, // MIPI timing parameters 3
{0x31BC, 0x8004}, // MIPI timing parameters 4
{0x31D0, 0x0000}, // Disable companding
{0x3002, 0x0008}, // Y_ADDR_START
{0x3004, 0x0008}, // X_ADDR_START
{0x3006, 0x04B7}, // Y_ADDR_END
{0x3008, 0x0787}, // X_ADDR_END
{0x3064, 0x1802}, // SMIA_TEST
{0x300A, 0x0C3F}, // 0xc3f: 30fps. FRAME_LENGTH
{0x300C, 0x0264}, // LINE_LENGTH_PCK
{0x30A2, 0x0001}, // X_ODD_INC
{0x30A6, 0x0001}, // Y_ODD_INC
{0x3012, 0x02DC}, // COARSE_INTEGRATION_TIME
{0x3786, 0x0006}, // DIGITAL_CTRL_1
{0x3044, 0x0410}, // RESERVED_MFR_3044
{0x3094, 0x03D4}, // RESERVED_MFR_3094
{0x3096, 0x0480}, // RESERVED_MFR_3096
{0x30B0, 0x0028}, // DIGITAL_TEST
{0x30BA, 0x7602}, // RESERVED_MFR_30BA
{0x30FE, 0x002A}, // NOISE_PEDESTAL
{0x31DE, 0x0410}, // RESERVED_MFR_31DE
{0x3ED6, 0x1435}, // RESERVED_MFR_3ED6
{0x3ED8, 0x9865}, // RESERVED_MFR_3ED8
{0x3EDA, 0x7698}, // RESERVED_MFR_3EDA
{0x3EDC, 0x99FF}, // RESERVED_MFR_3EDC
{0x3EE2, 0xBB88}, // RESERVED_MFR_3EE2
{0x3EE4, 0x8836}, // RESERVED_MFR_3EE4
{0x3EF0, 0x1CF0}, // RESERVED_MFR_3EF0
{0x3EF2, 0x0000}, // RESERVED_MFR_3EF2
{0x3EF8, 0x6166}, // RESERVED_MFR_3EF8
{0x3EFA, 0x3333}, // RESERVED_MFR_3EFA
{0x3EFC, 0x6634}, // RESERVED_MFR_3EFC
{0x3276, 0x05DC}, // RESERVED_MFR_3276
{0x3ECC, 0x6E42}, // RESERVED_MFR_3ECC
{0x3ECC, 0x0E42}, // RESERVED_MFR_3ECC
{0x3EEC, 0x0C0C}, // RESERVED_MFR_3EEC
{0x3EE8, 0xAAE4}, // RESERVED_MFR_3EE8
{0x3EE6, 0x3363}, // RESERVED_MFR_3EE6
{0x3EE6, 0x3363}, // RESERVED_MFR_3EE6
{0x3EE8, 0xAAE4}, // RESERVED_MFR_3EE8
{0x3EE8, 0xAAE4}, // RESERVED_MFR_3EE8
{0x3060, 0x002E}, // ANALOG_GAIN
{0x31DC, 0x0034}, // RESERVED_MFR_31DC
{0x300A, 0x094F}, // FRAME_LENGTH_LINES*-- Valu
{0x300C, 0x0324}, // LINE_LENGTH_PCK
{0x3012, 0x0355}, // COARSE_INTEGRATION_TIME
{0x3064, 0x1882}, // EMBEDDED_DATA_CTRL
{0x3064, 0x1982}, // EMBEDDED_DATA_CTRL
{0x3100, 0x0000}, // AEC_ENABLE		    0, 0x31
{0x311c, 0x2710}, // 0x033e,
{0x3ED2, 0xAA86}, // RESERVED_MFR_3ED2
{0x3EEE, 0xA4AA}, // RESERVED_MFR_3EEE
{0x3270, 0x0100}, // enable flash output
{0x301D, 0x0300}, // FLIP

{0x302A, 0x0008},		//VT_PIX_CLK_DIV = 8
{0x302C, 0x0001},		//VT_SYS_CLK_DIV = 1
{0x302E, 0x0003},		//PRE_PLL_CLK_DIV = 3
{0x3030, 0x0050},		//PLL_MULTIPLIER = 80
{0x3036, 0x000A},		//OP_PIX_CLK_DIV = 8
{0x3038, 0x0002},		//OP_SYS_CLK_DIV = 2
{0x31B0, 0x0080},		//FRAME_PREAMBLE = 128
{0x31B2, 0x005C},		//LINE_PREAMBLE = 92
{0x31B4, 0x2248},		//MIPI_TIMING_0 = 8776
{0x31B6, 0x325B},		//MIPI_TIMING_1 = 12891
{0x31B8, 0x904C},		//MIPI_TIMING_2 = 36940
{0x31BA, 0x028B},		//MIPI_TIMING_3 = 651
{0x31BC, 0x8E09},		//MIPI_TIMING_4 = 36361
{0x3354, 0x002B},		//MIPI_CNTRL = 43
{0x301A, 0x2058},		//RESET_REGISTER = 8280
{0x31AE, 0x0204},		//SERIAL_FORMAT = 516
{0x3002, 0x0008},		//Y_ADDR_START = 8
{0x3004, 0x0008},		//X_ADDR_START = 8
{0x3006, 0x04B7},		//Y_ADDR_END = 1207
{0x3008, 0x0787},		//X_ADDR_END = 1927
{0x300A, 0x04C4},		//FRAME_LENGTH_LINES = 1220
{0x300C, 0x0264},		//LINE_LENGTH_PCK = 612
{0x3012, 0x0498},		//COARSE_INTEGRATION_TIME = 1176
{0x31AC, 0x0A0A},		//DATA_FORMAT_BITS = 2568
{0x306E, 0x9010},		//DATAPATH_SELECT = 36880
{0x30A2, 0x0001},		//X_ODD_INC = 1
{0x30A6, 0x0001},		//Y_ODD_INC = 1
{0x3082, 0x0003},		//OPERATION_MODE_CTRL = 3
{0x3040, 0x0000},		//READ_MODE = 0
{0x31D0, 0x0000},		//COMPANDING = 0
{0x301D, 0x0300}, // FLIP
{0x301A, 0x205C},// RESET_REGISTER
{AR0234_TABLE_WAIT_MS, AR0234_WAIT_MS_STREAM},
{AR0234_TABLE_END, 0x0000}

};

static ar0234_reg ar0234_stop[] = {
	{0x301A, 0x00D9}, // RESET_REGISTER
	{AR0234_TABLE_WAIT_MS, AR0234_WAIT_MS_STREAM},
	{AR0234_TABLE_END, 0x00}
};

static ar0234_reg ar0234_1920x1200_crop_120fps[] = {
	{AR0234_TABLE_END, 0x00},
};

enum {
	AR0234_MODE_1920X1200_CROP_120FPS,
	AR0234_MODE_START_STREAM,
	AR0234_MODE_STOP_STREAM,
};

static ar0234_reg *mode_table[] = {
	[AR0234_MODE_1920X1200_CROP_120FPS]
		= ar0234_1920x1200_crop_120fps,
	[AR0234_MODE_START_STREAM]
		= ar0234_start,
	[AR0234_MODE_STOP_STREAM]
		= ar0234_stop,
};

static const int ar0234_30fps[] = {
	30,
};

static const int ar0234_60fps[] = {
	60,
};

static const int ar0234_100fps[] = {
	100,
};

static const struct camera_common_frmfmt ar0234_frmfmt[] = {
	{{1920, 1200}, ar0234_100fps, 1, 0, AR0234_MODE_1920X1200_CROP_120FPS},
};
#endif /* __AR0234_I2C_TABLES__ */
